<!--Input component to select priority for a task or story, using a dropdown list-->

@using Models.Entities
@using ScrumBoard.Shared.Widgets

<button 
    @attributes=AdditionalAttributes 
    class="@("btn border d-block " + (Disabled ? "" : "dropdown-toggle"))" 
    type="button" 
    id="priority-menu-button" 
    data-bs-toggle="dropdown"
    aria-expanded="false"
>
    <div class="d-inline-block text-start pe-2" style="min-width: 5em;">
        <div class="row gx-1">
            <div class="col-auto">
                <PriorityIndicator Priority="@Value"/>
            </div>
            <div class="col">
                @Value
            </div>
        </div>
    </div>
</button>
@if (!Disabled)
{
    <ul class="dropdown-menu" aria-labelledby="priority-menu-button">
        @foreach (Priority priority in Enum.GetValues(typeof(Priority)))
        {
            <li>
                <button type="button" class="dropdown-item" id="priority-select-@priority" @onclick="@(() => ValueChanged.InvokeAsync(priority))">
                    <PriorityIndicator Priority="@priority"/>
                    @priority
                </button>
            </li>
        }      
    </ul>
}

@code {    
    [Parameter]
    public Priority Value { get; set; }

    [Parameter]
    public EventCallback<Priority> ValueChanged { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }
}