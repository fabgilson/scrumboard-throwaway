@using ScrumBoard.Extensions
@using ScrumBoard.Models.Entities
@using ScrumBoard.Models.Forms
@using ScrumBoard.Utils
<div id="backlog-story-list-item" style="user-select: none;cursor:pointer;">
    <div class="row align-items-center justify-content-between gx-2">
        <div id="story-priority" class="col-auto pe-2 fs-4">
            <PriorityIndicator Priority="Story.Priority"/>
        </div>
        <div class="col flex-shrink-1 ps-1" style="min-width: 11rem;">
            <div id="story-name">
                <h5 class="mb-0 text-truncate">
                    @Story.Name
                </h5>
            </div>
            <div id="story-description" class="text-truncate">
                <Markdown Source="@Story.Description" NoFormat/>
            </div>
        </div>
      
        <div class="col-auto" >
            <div>
                <span class="fw-bold">
                    @Story.Estimate
                </span>
                Point@(Story.Estimate != 1 ? "s" : ""),
                <span class="fw-bold">
                    @Story.Tasks.Count()
                </span>
                Task@(Story.Tasks.Count() != 1 ? "s" : "")
            </div>
            <div>
                Estimate 
                <span class="fw-bold">
                    @(DurationUtils.DurationStringFrom(Story.GetDurationEstimate()))
                </span>
            </div>
        </div>
    </div>
</div>

@if (UserStoryStartForm != null) {
    <ValidationMessage id="story-estimate-validation-message" For="@(() => UserStoryStartForm.Estimate)"/>
    <ValidationMessage id="tasks-validation-message" For="@(() => UserStoryStartForm.Tasks)"/>
}  

@code
{
    [Parameter]
    public UserStory Story { get; set; }   

    [Parameter]
    public UserStoryStartForm UserStoryStartForm { get; set; }
}