@using Models.Entities

@{
    var style = "";
}
<div class="d-inline-block" style="position: relative;">
    @if (Complexity is Complexity.High or Complexity.Unset)
    {
        <div
            class="bi @ComplexityClasses[Complexity] @ComplexityTextClasses[Complexity]"
            style="@style"
            title="@Complexity"
            @attributes="AdditionalAttributes"/>
    }
    else
    {
        var src = Complexity is Complexity.Low ? "svg/bar-chart-one-filled.svg" : "svg/bar-chart-two-filled.svg";
        style = "display: inline-block; font-style: normal; font-weight: normal !important; font-feature-settings: normal; font-variant: normal; text-transform: none; line-height: 1; vertical-align: -0.125em; -webkit-font-smoothing: antialiased;";
        <img
            src="@src"
            class="bi @ComplexityTextClasses[Complexity]"
            style="@style"
            title="@Complexity"
            width="16"
            height="16"
            @attributes="AdditionalAttributes" alt="complexity bar chart icon"/>
    }
    
</div>

@code
{
    [Parameter]
    public Complexity Complexity { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }

    private static readonly Dictionary<Complexity, string> ComplexityTextClasses = new()
    {
        [Complexity.Unset]    = "text-primary",
        [Complexity.Low]      = "text-primary",
        [Complexity.Medium]   = "text-secondary",
        [Complexity.High]     = "text-danger",
    };

    private static readonly Dictionary<Complexity, string> ComplexityClasses = new() 
    {
        [Complexity.Unset]    = "bi-dash",
        [Complexity.Low]      = "",
        [Complexity.Medium]   = "",
        [Complexity.High]     = "bi-bar-chart-fill",
    };
}