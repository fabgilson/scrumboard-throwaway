syntax = "proto3";
option csharp_namespace = "SharedLensResources";

import "util/pagination.proto";
import "util/filtering.proto";
import "util/validation.proto";

// For adding a new course to the Identity Provider
message AddCourseRequest {
  // Short form name of the course, commonly a course 'code'. E.g 'SENG302'
  string short_name = 1;
  // Full name for the course, e.g 'SENG302 - Software Engineering Project Course'
  string long_name = 2;
  // Description of the course
  string description = 3;
}

// Represents a single instance of a course
message CourseResponse {
  // The IdP's unique identifier for this course, generated automatically on creation
  int64 id = 1;
  // Short form name of the course, commonly a course 'code', e.g 'SENG302'.
  // Must be unique within an organisation, there may not be multiple courses with the same shortname.
  string short_name = 2;
  // Full name for the course, e.g 'SENG302 - Software Engineering Project Course'
  string long_name = 3;
  // Description of the course
  string description = 4;
}

// Response when attempting to add a new course. ValidationResponse informs client of whether their request data was 
// valid, and if not, what the errors are that must be addressed. If the request data was valid, the newly created 
// course entity is returned.
message AddCourseResponse {
  ValidationResponse validation = 1;
  optional CourseResponse course_response = 2;
}

// Get a course with given course Id, this is the unique ID generated by the IdP when course is created
message GetCourseByIdRequest {
  int64 course_id = 1;
}

// Pagination supported collection of courses returned from IdP
message PaginatedCoursesResponse {
  repeated CourseResponse courses = 1;
  PaginationResponseOptions pagination_response_options = 2;
}

// For requesting multiple courses from the IdP. Pagination options must be provided, while filtering options may be 
// provided.
message GetPaginatedCoursesRequest {
  PaginationRequestOptions pagination_request_options = 1;
  // Filters on course short name and long name
  optional BasicStringFilteringOptions filtering_options = 2; 
}

service LensCourseService {
  // Retrieve a course from the IdP by a specific Id
  rpc GetCourseById(GetCourseByIdRequest) returns (CourseResponse);
  // Get multiple courses from the IdP, paginated. Courses may be filtered.
  rpc GetPaginatedCourses(GetPaginatedCoursesRequest) returns (PaginatedCoursesResponse);
  // Only allowed for system admins, adds a new course to the IdP.
  rpc AddCourse(AddCourseRequest) returns (AddCourseResponse);
}